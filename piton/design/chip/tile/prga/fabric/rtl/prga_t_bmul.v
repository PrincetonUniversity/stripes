// Copyright (c) 2024 Princeton University
// All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of the copyright holder nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.

// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Automatically generated by PRGA's RTL generator
`timescale 1ns/1ps
module prga_t_bmul (
    input wire [19:0] bi_u1y0n_L1
    , input wire [19:0] bi_u1y0s_L1
    , output wire [19:0] cu_u1y0n_L1
    , output wire [19:0] cu_u1y0s_L1
    , input wire [19:0] bi_u1y0n_L4
    , input wire [19:0] bi_u1y0s_L4
    , input wire [19:0] bi_u1v3n_L4
    , input wire [19:0] bi_u1y3s_L4
    , input wire [19:0] bi_u1v1n_L4
    , input wire [19:0] bi_u1y1s_L4
    , input wire [19:0] bi_u1v2n_L4
    , input wire [19:0] bi_u1y2s_L4
    , output wire [19:0] cu_u1y0n_L4
    , output wire [19:0] cu_u1y0s_L4
    , input wire [19:0] bi_u1y1n_L1
    , input wire [19:0] bi_u1y1s_L1
    , output wire [19:0] cu_u1y1n_L1
    , output wire [19:0] cu_u1y1s_L1
    , input wire [19:0] bi_u1y1n_L4
    , input wire [19:0] bi_u1y4s_L4
    , output wire [19:0] cu_u1y1n_L4
    , output wire [19:0] cu_u1y1s_L4
    , input wire [0:0] clk
    , input wire [0:0] prog_clk
    , input wire [0:0] prog_rst
    , input wire [0:0] prog_done
    , input wire [0:0] prog_we
    , input wire [0:0] prog_din
    , output wire [0:0] prog_dout
    , output wire [0:0] prog_we_o
    );
    
        
    wire [39:0] _i_blk__x0;
    wire [39:0] _i_blk__x1;
    wire [0:0] _i_blk__prog_dout;
    wire [0:0] _i_blk__prog_we_o;
    wire [0:0] _i_cbox_w0__bp_x0y0i0_ce;
    wire [19:0] _i_cbox_w0__bp_x0y0i0_ax0;
    wire [19:0] _i_cbox_w0__bp_x0y0i0_bx0;
    wire [19:0] _i_cbox_w0__cu_u1y0n_L1;
    wire [19:0] _i_cbox_w0__cu_u1y0s_L1;
    wire [19:0] _i_cbox_w0__cu_u1y0n_L4;
    wire [19:0] _i_cbox_w0__cu_u1y0s_L4;
    wire [0:0] _i_cbox_w0__prog_dout;
    wire [0:0] _i_cbox_w0__prog_we_o;
    wire [19:0] _i_cbox_w1__bp_x0y0i0_ax1;
    wire [19:0] _i_cbox_w1__bp_x0y0i0_bx1;
    wire [19:0] _i_cbox_w1__cu_u1y0n_L1;
    wire [19:0] _i_cbox_w1__cu_u1y0s_L1;
    wire [19:0] _i_cbox_w1__cu_u1y0n_L4;
    wire [19:0] _i_cbox_w1__cu_u1y0s_L4;
    wire [0:0] _i_cbox_w1__prog_dout;
    wire [0:0] _i_cbox_w1__prog_we_o;
    wire [0:0] _i_buf_prog_rst_l0__Q;
    wire [0:0] _i_buf_prog_done_l0__Q;
    wire [0:0] _i_buf_prog_rst_l1__Q;
    wire [0:0] _i_buf_prog_done_l1__Q;
        
    prga_bmul i_blk (
        .clk(clk)
        ,.ce(_i_cbox_w0__bp_x0y0i0_ce)
        ,.ax0(_i_cbox_w0__bp_x0y0i0_ax0)
        ,.bx0(_i_cbox_w0__bp_x0y0i0_bx0)
        ,.x0(_i_blk__x0)
        ,.ax1(_i_cbox_w1__bp_x0y0i0_ax1)
        ,.bx1(_i_cbox_w1__bp_x0y0i0_bx1)
        ,.x1(_i_blk__x1)
        ,.prog_clk(prog_clk)
        ,.prog_rst(_i_buf_prog_rst_l1__Q)
        ,.prog_done(_i_buf_prog_done_l1__Q)
        ,.prog_we(prog_we)
        ,.prog_din(prog_din)
        ,.prog_dout(_i_blk__prog_dout)
        ,.prog_we_o(_i_blk__prog_we_o)
        );
    cbox_prga_t_bmul_w0 i_cbox_w0 (
        .bp_x0y0i0_ce(_i_cbox_w0__bp_x0y0i0_ce)
        ,.bi_u1y0n_L1(bi_u1y0n_L1)
        ,.bi_u1y0s_L1(bi_u1y0s_L1)
        ,.bp_x0y0i0_ax0(_i_cbox_w0__bp_x0y0i0_ax0)
        ,.bp_x0y0i0_bx0(_i_cbox_w0__bp_x0y0i0_bx0)
        ,.bp_x0y0i0_x0(_i_blk__x0)
        ,.cu_u1y0n_L1(_i_cbox_w0__cu_u1y0n_L1)
        ,.cu_u1y0s_L1(_i_cbox_w0__cu_u1y0s_L1)
        ,.bi_u1y0n_L4(bi_u1y0n_L4)
        ,.bi_u1y0s_L4(bi_u1y0s_L4)
        ,.bi_u1v3n_L4(bi_u1v3n_L4)
        ,.bi_u1y3s_L4(bi_u1y3s_L4)
        ,.bi_u1v1n_L4(bi_u1v1n_L4)
        ,.bi_u1y1s_L4(bi_u1y1s_L4)
        ,.bi_u1v2n_L4(bi_u1v2n_L4)
        ,.bi_u1y2s_L4(bi_u1y2s_L4)
        ,.cu_u1y0n_L4(_i_cbox_w0__cu_u1y0n_L4)
        ,.cu_u1y0s_L4(_i_cbox_w0__cu_u1y0s_L4)
        ,.prog_clk(prog_clk)
        ,.prog_rst(_i_buf_prog_rst_l1__Q)
        ,.prog_done(_i_buf_prog_done_l1__Q)
        ,.prog_we(_i_cbox_w1__prog_we_o)
        ,.prog_din(_i_cbox_w1__prog_dout)
        ,.prog_dout(_i_cbox_w0__prog_dout)
        ,.prog_we_o(_i_cbox_w0__prog_we_o)
        );
    cbox_prga_t_bmul_w1 i_cbox_w1 (
        .bp_x0y0i0_ax1(_i_cbox_w1__bp_x0y0i0_ax1)
        ,.bi_u1y0n_L1(bi_u1y1n_L1)
        ,.bi_u1y0s_L1(bi_u1y1s_L1)
        ,.bp_x0y0i0_bx1(_i_cbox_w1__bp_x0y0i0_bx1)
        ,.bp_x0y0i0_x1(_i_blk__x1)
        ,.cu_u1y0n_L1(_i_cbox_w1__cu_u1y0n_L1)
        ,.cu_u1y0s_L1(_i_cbox_w1__cu_u1y0s_L1)
        ,.bi_u1y0n_L4(bi_u1y1n_L4)
        ,.bi_u1y0s_L4(bi_u1y1s_L4)
        ,.bi_u1v3n_L4(bi_u1v2n_L4)
        ,.bi_u1y3s_L4(bi_u1y4s_L4)
        ,.bi_u1v1n_L4(bi_u1y0n_L4)
        ,.bi_u1y1s_L4(bi_u1y2s_L4)
        ,.bi_u1v2n_L4(bi_u1v1n_L4)
        ,.bi_u1y2s_L4(bi_u1y3s_L4)
        ,.cu_u1y0n_L4(_i_cbox_w1__cu_u1y0n_L4)
        ,.cu_u1y0s_L4(_i_cbox_w1__cu_u1y0s_L4)
        ,.prog_clk(prog_clk)
        ,.prog_rst(_i_buf_prog_rst_l1__Q)
        ,.prog_done(_i_buf_prog_done_l1__Q)
        ,.prog_we(_i_blk__prog_we_o)
        ,.prog_din(_i_blk__prog_dout)
        ,.prog_dout(_i_cbox_w1__prog_dout)
        ,.prog_we_o(_i_cbox_w1__prog_we_o)
        );
    prga_simple_buf i_buf_prog_rst_l0 (
        .C(prog_clk)
        ,.D(_i_buf_prog_rst_l1__Q)
        ,.Q(_i_buf_prog_rst_l0__Q)
        );
    prga_simple_bufr i_buf_prog_done_l0 (
        .C(prog_clk)
        ,.R(_i_buf_prog_rst_l0__Q)
        ,.D(_i_buf_prog_done_l1__Q)
        ,.Q(_i_buf_prog_done_l0__Q)
        );
    prga_simple_buf i_buf_prog_rst_l1 (
        .C(prog_clk)
        ,.D(prog_rst)
        ,.Q(_i_buf_prog_rst_l1__Q)
        );
    prga_simple_bufr i_buf_prog_done_l1 (
        .C(prog_clk)
        ,.R(_i_buf_prog_rst_l0__Q)
        ,.D(prog_done)
        ,.Q(_i_buf_prog_done_l1__Q)
        );
        
    assign cu_u1y0n_L1 = _i_cbox_w0__cu_u1y0n_L1;
    assign cu_u1y0s_L1 = _i_cbox_w0__cu_u1y0s_L1;
    assign cu_u1y0n_L4 = _i_cbox_w0__cu_u1y0n_L4;
    assign cu_u1y0s_L4 = _i_cbox_w0__cu_u1y0s_L4;
    assign cu_u1y1n_L1 = _i_cbox_w1__cu_u1y0n_L1;
    assign cu_u1y1s_L1 = _i_cbox_w1__cu_u1y0s_L1;
    assign cu_u1y1n_L4 = _i_cbox_w1__cu_u1y0n_L4;
    assign cu_u1y1s_L4 = _i_cbox_w1__cu_u1y0s_L4;
    assign prog_dout = _i_cbox_w0__prog_dout;
    assign prog_we_o = _i_cbox_w0__prog_we_o;

endmodule
