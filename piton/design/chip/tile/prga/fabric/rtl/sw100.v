// Copyright (c) 2024 Princeton University
// All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of the copyright holder nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.

// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Automatically generated by PRGA's RTL generator
`timescale 1ns/1ps
module sw100 (
    input wire [99:0] i
    , output reg [0:0] o

    , input wire [0:0] prog_done
    , input wire [6:0] prog_data
    );

    always @* begin
        if (~prog_done) begin
            o = 1'b0;
        end else begin
            o = 1'b0;   // if ``prog_data == 0`` or ``prog_data`` out of bound, output 0
            case (prog_data)
                7'd1: o = i[0];
                7'd2: o = i[1];
                7'd3: o = i[2];
                7'd4: o = i[3];
                7'd5: o = i[4];
                7'd6: o = i[5];
                7'd7: o = i[6];
                7'd8: o = i[7];
                7'd9: o = i[8];
                7'd10: o = i[9];
                7'd11: o = i[10];
                7'd12: o = i[11];
                7'd13: o = i[12];
                7'd14: o = i[13];
                7'd15: o = i[14];
                7'd16: o = i[15];
                7'd17: o = i[16];
                7'd18: o = i[17];
                7'd19: o = i[18];
                7'd20: o = i[19];
                7'd21: o = i[20];
                7'd22: o = i[21];
                7'd23: o = i[22];
                7'd24: o = i[23];
                7'd25: o = i[24];
                7'd26: o = i[25];
                7'd27: o = i[26];
                7'd28: o = i[27];
                7'd29: o = i[28];
                7'd30: o = i[29];
                7'd31: o = i[30];
                7'd32: o = i[31];
                7'd33: o = i[32];
                7'd34: o = i[33];
                7'd35: o = i[34];
                7'd36: o = i[35];
                7'd37: o = i[36];
                7'd38: o = i[37];
                7'd39: o = i[38];
                7'd40: o = i[39];
                7'd41: o = i[40];
                7'd42: o = i[41];
                7'd43: o = i[42];
                7'd44: o = i[43];
                7'd45: o = i[44];
                7'd46: o = i[45];
                7'd47: o = i[46];
                7'd48: o = i[47];
                7'd49: o = i[48];
                7'd50: o = i[49];
                7'd51: o = i[50];
                7'd52: o = i[51];
                7'd53: o = i[52];
                7'd54: o = i[53];
                7'd55: o = i[54];
                7'd56: o = i[55];
                7'd57: o = i[56];
                7'd58: o = i[57];
                7'd59: o = i[58];
                7'd60: o = i[59];
                7'd61: o = i[60];
                7'd62: o = i[61];
                7'd63: o = i[62];
                7'd64: o = i[63];
                7'd65: o = i[64];
                7'd66: o = i[65];
                7'd67: o = i[66];
                7'd68: o = i[67];
                7'd69: o = i[68];
                7'd70: o = i[69];
                7'd71: o = i[70];
                7'd72: o = i[71];
                7'd73: o = i[72];
                7'd74: o = i[73];
                7'd75: o = i[74];
                7'd76: o = i[75];
                7'd77: o = i[76];
                7'd78: o = i[77];
                7'd79: o = i[78];
                7'd80: o = i[79];
                7'd81: o = i[80];
                7'd82: o = i[81];
                7'd83: o = i[82];
                7'd84: o = i[83];
                7'd85: o = i[84];
                7'd86: o = i[85];
                7'd87: o = i[86];
                7'd88: o = i[87];
                7'd89: o = i[88];
                7'd90: o = i[89];
                7'd91: o = i[90];
                7'd92: o = i[91];
                7'd93: o = i[92];
                7'd94: o = i[93];
                7'd95: o = i[94];
                7'd96: o = i[95];
                7'd97: o = i[96];
                7'd98: o = i[97];
                7'd99: o = i[98];
                7'd100: o = i[99];
            endcase
        end
    end

endmodule